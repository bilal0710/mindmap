# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Message {
  id: String!
  content: String!
  from: String!
  to: String
  roomId: String!
}

type Chatroom {
  id: String!
  name: String!
  deleted: Boolean!
  messages: Message
  users: [User!]!
  type: ChatroomType!
  mindmapId: String!
}

enum ChatroomType {
  PUBLIC
  PRIVATE
}

type User {
  id: String!
  firstname: String
  lastname: String
  email: String!
  password: String!
  deleted: Boolean!
  role: UserRole!
  chatroom: Chatroom
}

enum UserRole {
  USER
  ADMIN
}

type Auth {
  """Generated access_token of the user"""
  token: String!
}

type Mindmap {
  id: String!
  title: String!
  parent_id: String
  children: [Mindmap!]!
  chatroom_id: String
}

type Query {
  users: [User!]!
  user(id: String!): User!
  whoAmI: User!
  messages(id: String!): [Message!]!
  message(id: String!): Message!
  mindmaps: [Mindmap!]!
  mindmapWithRoomId(roomId: String!): Mindmap!
  mindmap(id: String!): Mindmap!
  chatrooms: [Chatroom!]!
  chatroom(id: String!): Chatroom!
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  updateUser(updateUserInput: UpdateUserInput!): User!
  deleteUser(id: String!): User!
  login(email: String!, password: String!): Auth!
  signup(email: String!, password: String!, passwordRepeat: String!, firstname: String!, lastname: String!): Auth!
  createMessage(createMessageInput: CreateMessageInput!): Message!
  updateMessage(updateMessageInput: UpdateMessageInput!): Message!
  removeMessage(id: String!): Message!
  createMindmap(createMindmapInput: CreateMindmapInput!): Mindmap!
  createMindmaps(createMindmapInput: CreateMindmapInput!): Mindmap!
  updateMindmap(updateMindmapInput: UpdateMindmapInput!): Mindmap!
  removeMindmap(id: String!): Mindmap!
  createChatroom(createChatroomInput: CreateChatroomInput!): Chatroom!
  updateChatroom(updateChatroomInput: UpdateChatroomInput!): Chatroom!
  removeChatroom(id: String!): Chatroom!
  removeUserFromChatroom(userId: String!, roomId: String!): Chatroom!
  addUserFromChatroom(userId: String!, roomId: String!): Chatroom!
}

input CreateUserInput {
  firstname: String!
  lastname: String!
  email: String!
  password: String!
  passwordRepeat: String!
}

input UpdateUserInput {
  firstname: String
  lastname: String
  email: String!
  password: String
  passwordRepeat: String
  id: String!
  oldPassword: String!
  newPassword: String!
  newPasswordRepeat: String!
}

input CreateMessageInput {
  content: String!
  from: String!
  to: String
  roomId: String!
}

input UpdateMessageInput {
  content: String
  from: String
  to: String
  roomId: String
  id: String!
}

input CreateMindmapInput {
  title: String!
  parent_id: String
  chatroom_id: String!
  nodes: [String!]!
}

input UpdateMindmapInput {
  title: String
  parent_id: String
  chatroom_id: String
  nodes: [String!]
  id: String!
}

input CreateChatroomInput {
  name: String!
  users: [String!]!
  privateRoom: Boolean
}

input UpdateChatroomInput {
  id: String!
  name: String
  privateRoom: Boolean
  users: [String!]!
}

type Subscription {
  newMessage(roomId: String!): Message!
  newMindmap(roomId: String!): Mindmap!
}